<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <title>Rap Roulette | <%= title %></title>
  <link rel="stylesheet" type="text/css" href="/stylesheets/reset.css" />
  <link rel="stylesheet" type="text/css" href="/stylesheets/text.css" />
  <link rel="stylesheet" type="text/css" href="/stylesheets/960.css" />
  <link rel="stylesheet" type="text/css" href="/stylesheets/raproulette.css" />
  <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js" type="text/javascript"></script>
  <script src="/scripts/jquery-animate-css-rotate-scale.js"></script>
  <script src="/scripts/jquery-css-transform.js"></script>
  <script src="/scripts/rotate3Di.js"></script>
  <script src="/scripts/animation.js"></script>
  <script src="/scripts/soundmanager2-jsmin.js" type="text/javascript"></script>
  <script src="http://staging.tokbox.com/v0.91/js/TB.min.js"></script>
  <script src="/socket.io/socket.io.js" type="text/javascript"></script>
  <script src="/scripts/events.js" type="text/javascript"></script>
  <script src="/scripts/soundboard.js" type="text/javascript"></script>
  <script src="/scripts/model.js" type="text/javascript"></script>
  <script src="/scripts/jquery.simplemodal.1.4.2.min.js" type="text/javascript"></script>
  <script type="text/javascript">

    // globals set from the server
    var game_debug = <%= GLOBAL.game_debug %>;
    var room_id = "<%- room.id %>";
    
    // page init
    $(document).ready(function() {
        
        // initialize the data model
        initModel(function (model) {
            
            model.player = new model.Player(<%- JSON.stringify(player) %>, function (player) { 
              uiLoadPlayerNav(player);
              
              gSock.emit("room.enter", { sid: player.sid, room_id: room_id });
              gSock.emit('opentok.init', { sid: player.sid, room_id: room_id }); 

            });
            
            model.room = new model.Room(<%- JSON.stringify(room) %>, function (room) {
            });
            
            initServerClock(<%= ( new Date().getTime() + 700) %>);
            initSound({ beat_volume: 5, effects_volume: 50 }, function (soundManager) {});
            
            <% if (typeof battleState !== 'undefined') { %>
            model.battle = new model.Battle(<%- JSON.stringify(battleState) %>, function (battle) {

              ////////////////////
              // Initial Game State Sync
              ////////////////////
              
              // Set current rappers
              $("div.video-wrapper0").find("span").replaceWith('<span>' + battle.player[battle.players[0]].name + '</span>');
              $("div.video-wrapper1").find("span").replaceWith('<span>' + battle.player[battle.players[1]].name + '</span>');
              
              // Figure out current spot in battle
              var started_at = new Date(battle.started_at);
              var now = new Date(serverTime);
              var time_into_battle = now - started_at;
              var state = -1;
              var end_of_state = 0;

              while ( end_of_state < time_into_battle ) {
              	state++;
              	end_of_state += battle.script[state];
              }

              var time_into_state = now.getTime() - (end_of_state + started_at.getTime() - battle.script[state]);

              var time_left_in_state = started_at.getTime()+end_of_state - now.getTime();

              //alert("You walked into the battle during state "+state+". Time into state: "+time_into_state);

              //alert(battle.song_id)
              //alert(time_into_battle);

			
				
				console.log('got dem streamz');
				
				
              setTimeout("playSound( '"+battle.song_id+"', "+(time_into_battle+3000)+", true )", 3000);
              switch (state) {
                
              case(1):
              	// Pre-battle
              case(5):
              	// Before Player 1
              	setTimer(30);
              	moveSpotlight(true);
              	break;
              case(2):
              case(6):
              	// Player 1 Rap
              	setTimerValue(time_left_in_state/1000);
              	startCountdown();
              	moveSpotlight(true);
              	break;
              case(3):
              case(7):
              	// Before Player 2
              	setTimer(30);
              	moveSpotlight(false);
              	break;
              case(4):
              case(8):
              	// Player 2 Rap
              	setTimerValue(time_left_in_state/1000);
              	startCountdown();
              	moveSpotlight(false);
              	break;
              }


           });

            <% } %>


        });
        
        // initialize the animation
        initAnimation( {}, function (err) {  

            // hide the player setup
          $('#floatPlayerSetup').hide(); 
          
          //crowdAction('calm');
          
          initOPENTOK(function () {});
          
          //populateRoom();
          
          setVoteBars(0,0);

          setQueue(<%- JSON.stringify(queue_names) %>);

          // initialize the events only after the default ui and animations are running
          initEvents({ triggerEvents: <%- JSON.stringify(triggerEvents) %>}, function (err) {
            
          });    

        });

    });



  </script>

  <script src="/scripts/opentok.js"></script>

</head>

<body>
  <!---<div class="spotlight-wrapper">
    <img class="spotlight" src="images/spotlight.png" />
  </div>--->
  <div id="navbar-wrapper">
    <div id="navbar">
      <a href="/"><img src="/images/logo.png" /></a>
      <div id="playerNav">&nbsp;</div>
    </div>
  </div>

  <div class="container_12">

    
	<span id="soundplayer"></span>
    
    <div class="subwoofer"></div>
    <div class="stage">
    <!--<div class="lights">
    </div>--->
    <div class="videoswrapper">
      <div class="rapper">
        <div class="video-wrapper video-wrapper0">
          <div class="video video0" id="video_0">
            
          </div>
          <span>&nbsp;</span>
          <button class="madprops left" rel='0'>Mad Props!</button>
        </div>
        <div class="clear"></div>
      </div>
      
      
        <div class="dashboard">
        <div class="songinfo">
        </div>
        <div class="vs"></div>
        <div id="timer" class="timer">:00</div>
        </div>

       <div class="rapper">
        <div class="video-wrapper video-wrapper1">
          <div class="video video1"  id="video_1">
          
          </div>
          <span>&nbsp;</span>
          <button class="madprops right" rel='1'>Mad Props!</button>
        </div>
        <div class="clear"></div>
    </div>
      </div>
      <div class="gauge">
        <div class="meter"></div>
      </div>
      <div class="bar left"></div>
      <div class="bar right"></div>
      <div class="clear"></div>
      <div class="speaker left"></div>
      <div class="speaker right"></div>

    </div>
    <div class="clear"></div>


	<div id="enqueue-popup">
	<p><img src="../images/welcomelogo.png"/><br><br>
	Express yourself.<br><br>To rap, sign up and get in line. Rappers will have two thirty-second rounds to spit what it is they believe in. Other participants will vote on their favorite performance by pushing the "Mad Props" button. If you'd prefer to simply watch and not rap, that's totally fine. 
	<br><br>Whether you're a rapper looking to sharpen your craft, a fan looking to appreciate quality rap, or just looking to have some fun, come join the battle at Rap Roulette. 
	<br><br>DJ, Spin Dat Shyt.
	<br>
  <div id="facebookbtn"><a href="#" class="simplemodal-close"></a></div>
 	<a href="#" class="simplemodal-close">[close]</a>
		</p>
		
</div>


  <div class="crowd">
    
    <div class="info-wrapper"><div class="info" id="info0">&nbsp;</div></div>
    
    <div class="queue-wrapper">
      <button class="getinline">Get in Line</button>
	    <button class="leavequeue" style="display:none">Leave Queue</button>
      <ul class="queue" id="queue">
        <h4 id="queue_lineup">Lineup</h4>
      </ul>
    </div>
    
    <div class="info" id="info1"><div class="info" id="info0">&nbsp;</div></div>
    <div class="clear"></div>

  </div>
  

</div>  



  <div id="floatPlayerSetup">
    &nbsp;
  </div>

</body>

</html>
